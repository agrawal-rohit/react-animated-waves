name: Publish
permissions:
  contents: read
on:
  push:
    branches: ["main", "beta"]
  pull_request:
    branches: ["main", "beta", "next"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Begin CI
        uses: actions/checkout@v4

      #----------------------------------------------
      # Setup Node + Corepack/Yarn
      #----------------------------------------------
      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Enable Corepack (Yarn 4)
        run: |
          corepack enable
          # Optional but explicit â€” guarantees the exact version:
          corepack prepare yarn@4.9.1 --activate
          yarn -v

      #----------------------------------------------
      # Cache Yarn (works for PnP or node-modules linker)
      #----------------------------------------------
      - name: Cache Yarn directories
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/patches
            .yarn/plugins
            .yarn/releases
            .yarn/sdks
            .yarn/unplugged
            # If you use nodeLinker: node-modules, uncomment the next line:
            # node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      #----------------------------------------------
      # Install Dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: yarn install --immutable

      #----------------------------------------------
      # Run unit tests
      #----------------------------------------------
      - name: Test
        run: yarn test

  publish:
    permissions:
      contents: write
      packages: write
    if: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/beta') }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Enable Corepack (Yarn 4)
        run: |
          corepack enable
          corepack prepare yarn@4.9.1 --activate
          yarn -v

      - name: Cache Yarn directories
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/patches
            .yarn/plugins
            .yarn/releases
            .yarn/sdks
            .yarn/unplugged
            # If you use nodeLinker: node-modules, uncomment:
            # node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      #----------------------------------------------
      # Install dependencies
      #----------------------------------------------
      - name: Install dependencies
        run: yarn install --immutable

      - name: Test
        run: yarn test

      #----------------------------------------------
      # Store coverage
      #----------------------------------------------
      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@1.0.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: ./coverage/lcov.info

      #----------------------------------------------
      # Build dist package
      #----------------------------------------------
      - name: Build
        run: yarn build

      #----------------------------------------------
      # Publish package
      #----------------------------------------------
      - name: Semantic Release
        run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
